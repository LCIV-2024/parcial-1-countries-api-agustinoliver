package ar.edu.utn.frc.tup.lciii.controllers;
import ar.edu.utn.frc.tup.lciii.dtos.common.CountryDTO;
import ar.edu.utn.frc.tup.lciii.service.CountryService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequiredArgsConstructor
public class CountryController {

    private final CountryService countryService;

    @GetMapping("/countriesDTO")
    public ResponseEntity<List<CountryDTO>> getAllCountriesDTO() {
        List<CountryDTO> countryDTOList = countryService.getAllCountriesDTO();
        return new ResponseEntity<>(countryDTOList, HttpStatus.OK);
    }

    @GetMapping("/countriesDTOConFiltro")
    public List<CountryDTO> getCountries(@RequestParam(required = false) String name,
                                         @RequestParam(required = false) String code) {
        return countryService.getCountriesByNameOrCode(name, code);
    }

    @GetMapping("/{continent}/continent")
    public ResponseEntity<List<CountryDTO>> getCountriesByContinent(@PathVariable String continent) {
        List<CountryDTO> countries = countryService.getCountriesByContinent(continent);
        return ResponseEntity.ok(countries);
    }

    @GetMapping("/{language}/language")
    public ResponseEntity<List<CountryDTO>> getCountriesByLanguage(@PathVariable String language) {
        List<CountryDTO> countries = countryService.getCountriesByLanguage(language);
        return ResponseEntity.ok(countries);
    }

    @GetMapping("/most-borders")
    public ResponseEntity<CountryDTO> getCountryWithMostBorders() {
        CountryDTO country = countryService.getCountryWithMostBorders();
        return ResponseEntity.ok(country);
    }

    @PostMapping("/")

}